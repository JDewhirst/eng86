// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using feudalismData;

namespace feudalismData.Migrations
{
    [DbContext(typeof(FeudalismContext))]
    [Migration("20210508151731_CharactersHaveOverlords")]
    partial class CharactersHaveOverlords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("feudalismData.Character", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourtesyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dynasty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OverlordId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("OverlordId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("feudalismData.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerrainDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("TerrainDetailId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("feudalismData.TerrainDetail", b =>
                {
                    b.Property<string>("TerrainDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TerrainDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TravelSpeed")
                        .HasColumnType("int");

                    b.HasKey("TerrainDetailId");

                    b.ToTable("TerrainDetails");
                });

            modelBuilder.Entity("feudalismData.Character", b =>
                {
                    b.HasOne("feudalismData.Character", "Overlord")
                        .WithMany("Subordinates")
                        .HasForeignKey("OverlordId");

                    b.Navigation("Overlord");
                });

            modelBuilder.Entity("feudalismData.Province", b =>
                {
                    b.HasOne("feudalismData.Character", "Character")
                        .WithMany("Provinces")
                        .HasForeignKey("CharacterId");

                    b.HasOne("feudalismData.TerrainDetail", "TerrainDetail")
                        .WithMany("Provinces")
                        .HasForeignKey("TerrainDetailId");

                    b.Navigation("Character");

                    b.Navigation("TerrainDetail");
                });

            modelBuilder.Entity("feudalismData.Character", b =>
                {
                    b.Navigation("Provinces");

                    b.Navigation("Subordinates");
                });

            modelBuilder.Entity("feudalismData.TerrainDetail", b =>
                {
                    b.Navigation("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}
